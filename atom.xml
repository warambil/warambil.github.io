<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wilman Arambillete]]></title>
  <link href="http://warambil.com/atom.xml" rel="self"/>
  <link href="http://warambil.com/"/>
  <updated>2014-04-19T00:29:55-03:00</updated>
  <id>http://warambil.com/</id>
  <author>
    <name><![CDATA[Wilman Arambillete]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AWS: How to Setup a Basic LAMP Server on an EC2 Micro Instance]]></title>
    <link href="http://warambil.com/blog/2014/04/18/aws-how-to-setup-a-basic-lamp-server/"/>
    <updated>2014-04-18T21:05:00-03:00</updated>
    <id>http://warambil.com/blog/2014/04/18/aws-how-to-setup-a-basic-lamp-server</id>
    <content type="html"><![CDATA[<h2>Objective</h2>

<p>These are the Yum packages I usually install on an EC2 instance with CentOS. I have done this so many times that I thought that I could save others time by publishing them.</p>

<p>This list may clearly vary according to particular needs so feel free to include or rule out any package.</p>

<h2>Main Packages</h2>

<p>Apache, PHP, MySQL, FTP and APC cache</p>

<h2>Procedure</h2>

<p>From the AWS EC2 instance dashboard, go to Security Profile and open the following ports: 20, 21, 443, 25, 5000-6000, 23 and 80.</p>

<p>Install PHP</p>

<pre><code>sudo yum install php php-mcrypt php-mbstring php-gd php-xml php-mysql php-soap php-devel php-pear
</code></pre>

<p>Edit /etc/php.ini and adjust the memory limit and your timezone</p>

<pre><code>memory_limit = 512M
date.timezone = 'America/New_York'
</code></pre>

<p>Install Apache</p>

<pre><code>sudo yum install httpd httpd-devel 
sudo service httpd start
sudo chkconfig httpd on
</code></pre>

<p>Configure your virtual access</p>

<pre><code>sudo vim /etc/httpd/conf.d/&lt;your virtual server.conf&gt;

&lt;VirtualHost *:80&gt;
    ServerName domain.com
    ServerAlias www.domain.com
    DocumentRoot /var/www/html/domain
    ErrorLog /var/log/httpd/domain_error.log
    TransferLog /var/log/httpd/domain_access.log
    LogLevel warn
    DirectoryIndex index.html index.php

    &lt;Directory /var/www/html/domain&gt;
        Options FollowSymLinks
        AllowOverride All
    &lt;/Directory&gt;
&lt;/VirtualHost&gt;
</code></pre>

<p><em>Important:</em> DNS settings are beyond the scope of this post</p>

<p>Install APC</p>

<pre><code>sudo yum install gcc make pcre-devel 
pecl install apc
</code></pre>

<p>In order to enable the APC extension create</p>

<pre><code>/etc/php.d/apc.ini
</code></pre>

<p>with the following content</p>

<pre><code>extension=apc.so
</code></pre>

<p><em>Notice:</em> You will then need to edit the apc.ini file and add all the necessary APC configuration lines according to the configuration you need.</p>

<p>Set the server time according to your location</p>

<pre><code>sudo mv /etc/localtime /etc/localtime.bak
sudo ln -s /usr/share/zoneinfo/America/New_York /etc/localtime
</code></pre>

<p>Make sure to run the services you need (<em>i.e. httpd</em>) and set them to be loaded at startup.</p>

<p>Install MySQL</p>

<pre><code>sudo yum install mysql-server mysql
sudo service mysqld start
</code></pre>

<p>Set MySQL root user and password and run suggested commands to secure your MySQL server.</p>

<pre><code>/usr/bin/mysqladmin -u root password ‘new-password’
/usr/bin/mysqladmin -u root -h ip-10-204-63-86 password ‘new-password’
/usr/bin/mysql_secure_installation
sudo chkconfig mysqld on
</code></pre>

<p><em>Important:</em> If you are running a Micro instance please make sure to create a swap area and follow <a href="http://www.prowebdev.us/2012/05/amazon-ec2-linux-micro-swap-space.html">these steps</a> to prevent MySQL server from crashing.</p>

<p>Install FTP</p>

<pre><code>sudo yum install vsftpd
</code></pre>

<p>Install the DB4 package</p>

<pre><code>sudo yum install db4-utils
</code></pre>

<p>Create the list of virtual users</p>

<pre><code>/etc/vsftpd/virtual-users.txt 
</code></pre>

<p>and add your users like this</p>

<pre><code>username
password
username
password
</code></pre>

<p>Create the DB4 database like this</p>

<pre><code>db_load -T -t hash -f virtual-users.txt /etc/vsftpd/virtual-users.db
</code></pre>

<p>Create the PAM file</p>

<pre><code>sudo vim /etc/pam.d/vsftpd-virtual
</code></pre>

<p>and add the following content</p>

<pre><code>auth required pam_userdb.so db=/etc/vsftpd/virtual-users
account required pam_userdb.so db=/etc/vsftpd/virtual-users
</code></pre>

<p>Make sure the reference name (virtual-users) matches the name you chose for your virtual users file.</p>

<p>Create your configuration file</p>

<pre><code>sudo vim /etc/vsftpd/vsftpd.conf
</code></pre>

<p>This is a configuration file as an example</p>

<pre><code>anonymous_enable=NO
local_enable=YES
write_enable=YES
local_umask=022
force_dot_files=YES
listen_port=21
listen=YES
background=YES
dirmessage_enable=YES
xferlog_enable=YES
connect_from_port_20=YES
xferlog_std_format=YES
guest_enable=YES
guest_username=apache
local_root=/var/www
pam_service_name=vsftpd-virtual
guest_enable=YES
userlist_enable=YES
tcp_wrappers=YES
pasv_enable=YES
pasv_max_port=6000
pasv_min_port=5000
pasv_address=54.201.210.12
virtual_use_local_privs=YES
hide_ids=YES
user_config_dir=/etc/vsftpd/vsftpd_user_conf
</code></pre>

<p><em>pasv_address</em> must be your instance public IP
<em>pam_service_name</em> corresponds to the PAM file we have previously created
<em>local_root</em> is the directory you will access when connecting via FTP
<em>user_config_dir</em> is an optional directory with files named after virtual users, storing custom paths and/or settings.
<em>pasv_max_port</em> and <em>pasv_min_port</em> are arbitrary ports that must be open otherwise there will be errors when transferring files.</p>

<p>Make sure the apache user has read and write permissions on the web root directory.</p>

<pre><code>chown apache:apache /var/www/html
</code></pre>

<p>Restart the service</p>

<pre><code>sudo service vsftpd restart
sudo chkconfig vsftpd on
</code></pre>

<p>Important: This is a plain FTP server. If you prefer to access your files using FTP clients over SSH, please make sure to give your <em>ec2-user</em> access to your web folder.</p>

<pre><code>sudo usermod -a -G apache ec2-user
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magento: How to Add a New Tab and Section in the Backend]]></title>
    <link href="http://warambil.com/blog/2014/04/18/magento-how-to-add-a-new-tab-and-section-in-the-backend/"/>
    <updated>2014-04-18T20:37:50-03:00</updated>
    <id>http://warambil.com/blog/2014/04/18/magento-how-to-add-a-new-tab-and-section-in-the-backend</id>
    <content type="html"><![CDATA[<h2>Objective</h2>

<p>We are going to see step by step how to add a custom tab, section and group of fields in the Magento backend configuration area.</p>

<p><img class="center" src="http://warambil.com/images/magento-backend-new-tab.png" width="231" height="79" title="Magento backend custom tab" alt="images">
<img class="center" src="http://warambil.com/images/magento-backend-new-section.png" width="658" height="310" title="Magento backend custom section" alt="images"></p>

<h2>Procedure</h2>

<p>This post assumes you have already created a new module so we must edit the following configuration file:</p>

<pre><code>/app/code/local/&lt;company&gt;/&lt;modulo&gt;/etc/config.xml
</code></pre>

<p>We must then add our custom <em>helper</em> like this:</p>

<pre><code>&lt;config&gt;
&lt;modules&gt;
    &lt;LCS_Ebay&gt;
        &lt;version&gt;0.1.0&lt;/version&gt;
    &lt;/LCS_Ebay&gt;
&lt;/modules&gt;
&lt;global&gt;
    &lt;helpers&gt;
        &lt;ebay&gt;
            &lt;class&gt;LCS_Ebay_Helper&lt;/class&gt;
        &lt;/ebay&gt;
    &lt;/helpers&gt;
</code></pre>

<p>In this example we are planning to create a new section, therefore it is mandatory to create a new ACL role to be able to access this URL from the backend.
This new ACL role must be embedded into the <em>config.xml</em> file as well.</p>

<pre><code>&lt;adminhtml&gt;
    &lt;acl&gt;
        &lt;resources&gt;
            &lt;admin&gt;
                &lt;children&gt;
                    &lt;system&gt;
                        &lt;children&gt;
                            &lt;config&gt;
                                &lt;children&gt;
                                    &lt;ebay&gt;
                                        &lt;title&gt;Ebay&lt;/title&gt;
                                    &lt;/ebay&gt;
                                &lt;/children&gt;
                            &lt;/config&gt;
                        &lt;/children&gt;
                    &lt;/system&gt;
                &lt;/children&gt;
            &lt;/admin&gt;
        &lt;/resources&gt;
    &lt;/acl&gt;
</code></pre>

<p>Finally, we must edit this configuration file</p>

<pre><code>/app/code/local/&lt;empresa&gt;/&lt;modulo&gt;/etc/system.xml
</code></pre>

<p>in order to create our custom tab, section and groups of custom fields.</p>

<pre><code>&lt;?xmlversion="1.0"?&gt;
&lt;config&gt;
    &lt;tabs&gt;
        &lt;ebay translate="label" module="ebay"&gt;
            &lt;label&gt;Market Places&lt;/label&gt;
            &lt;sort_order&gt;99999&lt;/sort_order&gt;
        &lt;/ebay&gt;
    &lt;/tabs&gt;
    &lt;sections&gt;
        &lt;ebay translate="label" module="ebay"&gt;
            &lt;label&gt;Ebay&lt;/label&gt;
            &lt;tab&gt;ebay&lt;/tab&gt;
            &lt;frontend_type&gt;text&lt;/frontend_type&gt;
            &lt;sort_order&gt;1000&lt;/sort_order&gt;
            &lt;show_in_default&gt;1&lt;/show_in_default&gt;
            &lt;show_in_website&gt;1&lt;/show_in_website&gt;
            &lt;show_in_store&gt;1&lt;/show_in_store&gt;
            &lt;groups&gt;
                &lt;ebay translate="label" module="ebay"&gt;
                    &lt;label&gt;API Credentials&lt;/label&gt;
                    &lt;frontend_type&gt;text&lt;/frontend_type&gt;
                    &lt;sort_order&gt;100&lt;/sort_order&gt;
                    &lt;show_in_default&gt;1&lt;/show_in_default&gt;
                    &lt;show_in_website&gt;1&lt;/show_in_website&gt;
                    &lt;show_in_store&gt;1&lt;/show_in_store&gt;
                    &lt;fields&gt;
                        &lt;dev_id translate="label"&gt;
                            &lt;label&gt;Dev Id&lt;/label&gt;
                            &lt;frontend_type&gt;text&lt;/frontend_type&gt;
                            &lt;validate&gt;required-entry&lt;/validate&gt;
                            &lt;sort_order&gt;1&lt;/sort_order&gt;
                            &lt;show_in_default&gt;1&lt;/show_in_default&gt;
                            &lt;show_in_website&gt;1&lt;/show_in_website&gt;
                            &lt;show_in_store&gt;1&lt;/show_in_store&gt;
                        &lt;/dev_id&gt;
                    &lt;/fields&gt;
                &lt;/ebay&gt;
            &lt;/groups&gt;
        &lt;/ebay&gt;
    &lt;/sections&gt;
&lt;/config&gt;
</code></pre>

<p>For further information about every tag, please check the following <a href="http://www.magentocommerce.com/wiki/5_-_modules_and_development/admin/xml_structure_for_admin_configurations">link</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magento: File and Directory Permissions]]></title>
    <link href="http://warambil.com/blog/2014/04/18/magento-file-and-directory-permissions/"/>
    <updated>2014-04-18T17:02:19-03:00</updated>
    <id>http://warambil.com/blog/2014/04/18/magento-file-and-directory-permissions</id>
    <content type="html"><![CDATA[<p>Once you install Magento for the first time, you need to make sure files and directories hold the right set of permissions. We assume in this example that we are working on a CentOS platform and the httpd (owner and group) is apache. Then we must assign apache as owner and group of the web root where Magento resides. In our case this location is</p>

<pre><code>/var/www/html/magento
</code></pre>

<p>Then we set the right permissions</p>

<pre><code>cd /var/www/html
sudo chown apache:apache magento -R 
</code></pre>

<p>Then, we go to the magento directory and run the following commands</p>

<pre><code>cd magento
sudo find . -type f -print -exec chmod 664 {} \;
sudo find . -type d -print -exec chmod 775 {} \;
chmod 550 mage
sudo chmod o+w var app/etc
</code></pre>
]]></content>
  </entry>
  
</feed>
